[1mdiff --git a/src/__tests__/screenTestRunner.py b/src/__tests__/screenTestRunner.py[m
[1mindex f1f6f7a..5c71551 100644[m
[1m--- a/src/__tests__/screenTestRunner.py[m
[1m+++ b/src/__tests__/screenTestRunner.py[m
[36m@@ -36,24 +36,31 @@[m [mdef getRowsFromScreenRun([m
         charInputs,[m
         screenConfig={},[m
         printScreen=True,[m
[31m-        pastScreen=None):[m
[32m+[m[32m        pastScreen=None,[m
[32m+[m[32m        args=[]):[m
[32m+[m
     lineObjs = getLineObjsFromFile(inputFile)[m
     screen = ScreenForTest([m
         charInputs,[m
         maxX=screenConfig.get('maxX', 80),[m
         maxY=screenConfig.get('maxY', 30),[m
     )[m
[31m-    # mock our flags with an empty command line for now[m
[31m-    flags = ScreenFlags.initFromArgs([])[m
[32m+[m
[32m+[m[32m    # mock our flags with the passed arg list[m
[32m+[m[32m    flags = ScreenFlags.initFromArgs(args)[m
[32m+[m[32m    # we run our program and throw a StopIteration exception[m
[32m+[m[32m    # instead of sys.exit-ing[m
     try:[m
         choose.doProgram(screen, flags, CursesForTest(), lineObjs)[m
     except StopIteration:[m
         pass[m
[32m+[m
     if printScreen:[m
         screen.printOldScreens()[m
[32m+[m
     if pastScreen:[m
[31m-        return screen.getRowsForPastScreen(pastScreen)[m
[31m-    return screen.getRows()[m
[32m+[m[32m        return screen.getRowsWithAttributesForPastScreen(pastScreen)[m
[32m+[m[32m    return screen.getRowsWithAttributes()[m
 [m
 if __name__ == '__main__':[m
     getRowsFromScreenRun([m
